<!DOCTYPE html>
<html>
  <head>
    <title>Websocket Test</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.6.1/lodash.js"></script>
    <script src="/socket.io/socket.io.js"></script>
  </head>
  <body>
    <h1>Websocket Test</h1>

    <div id="images32"></div>
    <div id="images64"></div>
    <div id="images128"></div>

    <script>
      const TARGET_IDS = [
        '02dfc015067fedf36e0b5f2f4d8c903a',
        '1b1035c01f2d8df490c146a76080b41a',
        '0005b828193b25c61f600cf4e082446a',
        'f9bda71857c4b5dd47ca1ed50e3ff04e',
        '0006f130d6bcdf06b2a36ee680b171c1',
        'f795f9e9e129ae5446eeb923626ac707',
        'ffff814fca5de11caa543f33af84d937'
      ]

      const imageLoader = (result, element) => {
        // Magic here! (ArrayBuffer to Base64String)
        // Maybe better use https://github.com/beatgammit/base64-js
        const b64img = btoa([].reduce.call(new Uint8Array(result),(p,c) => {return p+String.fromCharCode(c)},''))

        const img = document.createElement('img');
        img.src = `data:image/jpeg;base64,${b64img}`

        const imgDiv = document.getElementById(element)
        imgDiv.appendChild(img)
      }

      const socket = io()

      socket.on('connect', () => {
        console.log('connected')
        _.each(TARGET_IDS, (id) => {
          socket.emit('thumb32', id, (data) => { imageLoader(data, 'images32') })
          socket.emit('thumb64', id, (data) => { imageLoader(data, 'images64') })
          socket.emit('thumb128', id, (data) => { imageLoader(data, 'images128') })
        })
      })
    </script>
  </body>
</html>
